name: Deploy Fabric Pipeline Dev -> Test

on:
  workflow_dispatch:  # Manual trigger, or add push/cron if you want

jobs:
  promote-dev-to-test:
    runs-on: ubuntu-latest

    env:
      TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      DEPLOYMENT_PIPELINE_ID: ${{ secrets.FABRIC_PIPELINE_ID }}
      DEV_STAGE_ID: ${{ secrets.FABRIC_DEV_STAGE_ID }}
      TEST_STAGE_ID: ${{ secrets.FABRIC_TEST_STAGE_ID }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Get Fabric API token
        id: get_token
        run: |
          TOKEN=$(curl -s -X POST \
            -H "Content-Type: application/x-www-form-urlencoded" \
            --data-urlencode "client_id=$CLIENT_ID" \
            --data-urlencode "scope=https://api.fabric.microsoft.com/.default" \
            --data-urlencode "client_secret=$CLIENT_SECRET" \
            --data-urlencode "grant_type=client_credentials" \
            "https://login.microsoftonline.com/$TENANT_ID/oauth2/v2.0/token" | jq -r .access_token)

          if [ -z "$TOKEN" ] || [ "$TOKEN" == "null" ]; then
            echo "Failed to get token"
            exit 1
          fi
          echo "token=$TOKEN" >> $GITHUB_OUTPUT

      - name: Promote Dev -> Test
        env: # This env block was incorrectly indented. It must be a key-value pair under the 'steps' item.
          ACCESS_TOKEN: ${{ steps.get_token.outputs.token }} # Fix reference to use correct ID (get_token) and output name (token)
        run: |
          set -euo pipefail

          # Guard: ensure env vars exist
          : "${DEPLOYMENT_PIPELINE_ID:?Missing DEPLOYMENT_PIPELINE_ID}"
          : "${DEV_STAGE_ID:?Missing DEV_STAGE_ID}"
          : "${TEST_STAGE_ID:?Missing TEST_STAGE_ID}"
          : "${ACCESS_TOKEN:?Missing ACCESS_TOKEN}"

          BODY=$(cat <<EOF
          {"sourceStageId":"$DEV_STAGE_ID","targetStageId":"$TEST_STAGE_ID","note":"GitHub Actions promote Dev to Test"}
                                EOF)

          echo "Promoting from Dev ($DEV_STAGE_ID) to Test ($TEST_STAGE_ID)..."

          # -f makes curl fail the step on HTTP >= 400 (useful!)
          RESP_HEADERS=$(mktemp)
          RESP_BODY=$(mktemp)

          curl -sS -f -i -X POST \
            -H "Authorization: Bearer ${ACCESS_TOKEN}" \
            -H "Content-Type: application/json" \
            -d "$BODY" \
            "https://api.fabric.microsoft.com/v1/deploymentPipelines/${DEPLOYMENT_PIPELINE_ID}/deploy" \
            | tee "$RESP_HEADERS" > "$RESP_BODY"

          echo "---- Response headers ----"
          head -n 20 "$RESP_HEADERS" || true
          echo "---- Response body ----"
          cat "$RESP_BODY" || true
